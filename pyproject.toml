[tool.poetry]
name = "docling-eval"
version = "0.3.0"  # DO NOT EDIT, updated automatically
description = "Evaluation of Docling"
authors = ["Christoph Auer <cau@zurich.ibm.com>", "Michele Dolfi <dol@zurich.ibm.com>", "Maxim Lysak <mly@zurich.ibm.com>", "Nikos Livathinos <nli@zurich.ibm.com>", "Ahmed Nassar <ahn@zurich.ibm.com>", "Panos Vagenas <pva@zurich.ibm.com>", "Peter Staar <taa@zurich.ibm.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/DS4SD/docling-eval"
homepage = "https://github.com/DS4SD/docling-eval"
keywords= ["docling", "evaluation", "convert", "document", "pdf", "docx", "html", "markdown", "layout model", "segmentation", "table structure", "table former"]
 classifiers = [
     "License :: OSI Approved :: MIT License",
     "Operating System :: MacOS :: MacOS X",
     "Operating System :: POSIX :: Linux",
     "Development Status :: 5 - Production/Stable",
     "Intended Audience :: Developers",
     "Intended Audience :: Science/Research",
     "Topic :: Scientific/Engineering :: Artificial Intelligence",
     "Programming Language :: Python :: 3"
 ]
packages = [{include = "docling_eval"}]

[tool.poetry.dependencies]
######################
# actual dependencies:
######################
python = "^3.10"
docling-core = "^2.30.0"
pydantic = "^2.0.0"
lxml = "^5.3.0"
datasets = "^3.2.0"
apted = "^1.0.3"
Distance = "^0.1.3"
docling = {extras = ["vlm"], version = "^2.31.0"}
matplotlib = "^3.10.0"
torch = "^2.5.1"
torchmetrics = "^1.6.0"
pycocotools = "^2.0.8"
tabulate = "^0.9.0"
tqdm = "^4.67.1"
pillow = "^10.3.0"
evaluate = "^0.4.3"
nltk = "^3.9.1"
ibm-cos-sdk = "^2.1.40"
azure-ai-documentintelligence = { version = "^1.0.2", optional = true }
azure-common = { version = "^1.1.28", optional = true }
azure-core = { version = "^1.33.0", optional = true }
beautifulsoup4 = "^4.12.3"
jiwer = "^3.1.0"
urllib3 = "^1.24.2"
pandas = "^2.2.3"
openpyxl = "^3.1.5"
boto3 = { version = "^1.37.8", optional = true }
google-cloud-documentai = { version = "^3.2.0", optional = true }
pypdf2 = "^3.0.1"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^24.4.2"}
pytest = "^7.2.2"
pytest-dependency = ">=0.6.0,<1"
pre-commit = "^3.7.1"
mypy = "^1.10.1"
isort = "^5.10.1"
python-semantic-release = "^7.32.2"
flake8 = "^6.0.0"
pyproject-flake8 = "^6.0.0"
pytest-xdist = "^3.3.1"
types-requests = "^2.31.0.2"
flake8-pyproject = "^1.2.3"
pylint = "^2.17.5"
pandas-stubs = "^2.1.4.231227"
ipykernel = "^6.29.5"
ipywidgets = "^8.1.5"
nbqa = "^1.9.0"
types-openpyxl = "^3.1.5.20241114"
xmltodict = "^0.14.2"
types-protobuf = "^5.29.1.20250315"
boto3-stubs = "^1.37.19"
types-urllib3 = "^1.26.25.14"

[tool.poetry.extras]
hyperscalers = ["azure-ai-documentintelligence", "azure-common", "azure-core", "boto3", "google-cloud-documentai"]

[tool.poetry.scripts]
docling_eval = "docling_eval.cli.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
py_version=39

[tool.mypy]
pretty = true
# strict = true
no_implicit_optional = true
plugins = "pydantic.mypy"
python_version = "3.10"

[[tool.mypy.overrides]]
module = [
    "docling_core.*",
    "docling.*",
    "docling_parse.*",
    "docling_ibm_models.*",
    "pypdfium2.*",    
    "lxml.*",
    "distance.*",
    "datasets.*",
    "apted.*",
    "nltk.*",
    "huggingface_hub.*",
    "PIL.*",
    "evaluate.*",
    "tqdm.*"
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501"]

[tool.semantic_release]
# for default values check:
# https://github.com/python-semantic-release/python-semantic-release/blob/v7.32.2/semantic_release/defaults.cfg

version_source = "tag_only"
branch = "main"

# configure types which should trigger minor and patch version bumps respectively
# (note that they must be a subset of the configured allowed types):
parser_angular_allowed_types = "build,chore,ci,docs,feat,fix,perf,style,refactor,test"
parser_angular_minor_types = "feat"
parser_angular_patch_types = "fix,perf"
